// Generated by CoffeeScript 1.6.3
(function() {
  var moment;

  moment = require('moment');

  exports.mergeFile = function(filename, identifier, callback) {
    var format, fs, path, saveFullName, saveName, time;
    fs = require('fs');
    path = require('path');
    time = (new Date()).getTime();
    format = filename.substr(filename.lastIndexOf('.') + 1);
    saveName = time + '.' + format;
    saveFullName = path.join(global.resumable.uploadDir, saveName);
    return fs.writeFile(saveFullName, '', {
      flag: 'w+'
    }, function(err) {
      var mergeFile;
      if (err) {
        callback(err);
        return;
      }
      mergeFile = function(chunkNum) {
        var chunkFileName;
        chunkFileName = path.join(global.resumable.temporaryFolder, '/resumable-' + identifier + '.' + chunkNum);
        fs.exists(chunkFileName, function(exists) {
          if (exists) {
            fs.readFile(chunkFileName, function(err, data) {
              if (err) {
                callback(err);
                return;
              }
              return fs.appendFile(saveFullName, data, function(err) {
                if (err) {
                  callback(err);
                  return;
                }
                fs.unlink(chunkFileName, function(err) {});
                return mergeFile(++chunkNum);
              });
            });
          } else {
            callback(null, saveName, format, time);
            console.log('file: ' + chunkFileName + ' not exists');
          }
        });
      };
      return mergeFile(1);
    });
  };

  exports.getFormatDate = function(time) {
    var date, second;
    date = moment(parseFloat(time));
    second = date.get('second');
    if (second < 10) {
      second = '0' + second;
    }
    return date.get('year') + '-' + (date.get('month') + 1) + '-' + date.get('date') + ' ' + date.get('hour') + ':' + date.get('minute') + ':' + second;
  };

}).call(this);
